#############################################################################
# Makefile for building: paint
# Generated by qmake (1.07a) (Qt 3.3.6) on: Thu Mar 26 18:47:51 2015
# Project:  paint.pro
# Template: app
# Command: $(QMAKE) -o Makefile paint.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/linux-g++-64 -I. -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = LayeredPixmap.h \
		my_colorpicker_dialog.h \
		my_eraserdialog.h \
		my_filldialog.h \
		my_linedialog.h \
		my_pendialog.h \
		my_rectdialog.h \
		my_toolbar.h \
		my_widget.h \
		stack.h
SOURCES = LayeredPixmap.cpp \
		main.cpp \
		my_colorpicker_dialog.cpp \
		my_eraserdialog.cpp \
		my_filldialog.cpp \
		my_linedialog.cpp \
		my_pendialog.cpp \
		my_rectdialog.cpp \
		my_toolbar.cpp \
		my_widget.cpp
OBJECTS = LayeredPixmap.o \
		main.o \
		my_colorpicker_dialog.o \
		my_eraserdialog.o \
		my_filldialog.o \
		my_linedialog.o \
		my_pendialog.o \
		my_rectdialog.o \
		my_toolbar.o \
		my_widget.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_LayeredPixmap.cpp \
		moc_my_colorpicker_dialog.cpp \
		moc_my_eraserdialog.cpp \
		moc_my_filldialog.cpp \
		moc_my_linedialog.cpp \
		moc_my_pendialog.cpp \
		moc_my_rectdialog.cpp \
		moc_my_toolbar.cpp \
		moc_my_widget.cpp
OBJMOC = moc_LayeredPixmap.o \
		moc_my_colorpicker_dialog.o \
		moc_my_eraserdialog.o \
		moc_my_filldialog.o \
		moc_my_linedialog.o \
		moc_my_pendialog.o \
		moc_my_rectdialog.o \
		moc_my_toolbar.o \
		moc_my_widget.o
DIST	   = paint.pro
QMAKE_TARGET = paint
DESTDIR  = 
TARGET   = paint

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: paint.pro  /usr/lib64/qt-3.3/mkspecs/linux-g++-64/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile paint.pro
qmake: 
	@$(QMAKE) -o Makefile paint.pro

dist: 
	@mkdir -p .tmp/paint && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/paint/ && ( cd `dirname .tmp/paint` && $(TAR) paint.tar paint && $(GZIP) paint.tar ) && $(MOVE) `dirname .tmp/paint`/paint.tar.gz . && $(DEL_FILE) -r .tmp/paint

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

LayeredPixmap.o: LayeredPixmap.cpp LayeredPixmap.h

main.o: main.cpp my_widget.h \
		my_pendialog.h \
		my_linedialog.h \
		my_eraserdialog.h \
		my_rectdialog.h \
		my_filldialog.h \
		my_colorpicker_dialog.h \
		stack.h \
		LayeredPixmap.h \
		my_toolbar.h

my_colorpicker_dialog.o: my_colorpicker_dialog.cpp my_colorpicker_dialog.h

my_eraserdialog.o: my_eraserdialog.cpp my_eraserdialog.h

my_filldialog.o: my_filldialog.cpp my_filldialog.h

my_linedialog.o: my_linedialog.cpp my_linedialog.h

my_pendialog.o: my_pendialog.cpp my_pendialog.h

my_rectdialog.o: my_rectdialog.cpp my_rectdialog.h

my_toolbar.o: my_toolbar.cpp my_toolbar.h

my_widget.o: my_widget.cpp my_widget.h \
		stack.h \
		my_pendialog.h \
		my_linedialog.h \
		my_eraserdialog.h \
		my_rectdialog.h \
		my_filldialog.h \
		my_colorpicker_dialog.h \
		LayeredPixmap.h \
		my_toolbar.h

moc_LayeredPixmap.o: moc_LayeredPixmap.cpp  LayeredPixmap.h 

moc_my_colorpicker_dialog.o: moc_my_colorpicker_dialog.cpp  my_colorpicker_dialog.h 

moc_my_eraserdialog.o: moc_my_eraserdialog.cpp  my_eraserdialog.h 

moc_my_filldialog.o: moc_my_filldialog.cpp  my_filldialog.h 

moc_my_linedialog.o: moc_my_linedialog.cpp  my_linedialog.h 

moc_my_pendialog.o: moc_my_pendialog.cpp  my_pendialog.h 

moc_my_rectdialog.o: moc_my_rectdialog.cpp  my_rectdialog.h 

moc_my_toolbar.o: moc_my_toolbar.cpp  my_toolbar.h 

moc_my_widget.o: moc_my_widget.cpp  my_widget.h my_pendialog.h \
		my_linedialog.h \
		my_eraserdialog.h \
		my_rectdialog.h \
		my_filldialog.h \
		my_colorpicker_dialog.h \
		stack.h \
		LayeredPixmap.h \
		my_toolbar.h

moc_LayeredPixmap.cpp: $(MOC) LayeredPixmap.h
	$(MOC) LayeredPixmap.h -o moc_LayeredPixmap.cpp

moc_my_colorpicker_dialog.cpp: $(MOC) my_colorpicker_dialog.h
	$(MOC) my_colorpicker_dialog.h -o moc_my_colorpicker_dialog.cpp

moc_my_eraserdialog.cpp: $(MOC) my_eraserdialog.h
	$(MOC) my_eraserdialog.h -o moc_my_eraserdialog.cpp

moc_my_filldialog.cpp: $(MOC) my_filldialog.h
	$(MOC) my_filldialog.h -o moc_my_filldialog.cpp

moc_my_linedialog.cpp: $(MOC) my_linedialog.h
	$(MOC) my_linedialog.h -o moc_my_linedialog.cpp

moc_my_pendialog.cpp: $(MOC) my_pendialog.h
	$(MOC) my_pendialog.h -o moc_my_pendialog.cpp

moc_my_rectdialog.cpp: $(MOC) my_rectdialog.h
	$(MOC) my_rectdialog.h -o moc_my_rectdialog.cpp

moc_my_toolbar.cpp: $(MOC) my_toolbar.h
	$(MOC) my_toolbar.h -o moc_my_toolbar.cpp

moc_my_widget.cpp: $(MOC) my_widget.h
	$(MOC) my_widget.h -o moc_my_widget.cpp

####### Install

install:  

uninstall:  

